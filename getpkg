#!/bin/bash

# Copyright © Sébastien Luttringer
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

pkg_host='seblu@white.seblu.net'
pkg_base='.'
pkg_regex=''
arch_regexp="($(uname -m)|any)"

usage() {
	echo "usage: ${0##*/} [options] <list|get|install> [pkg_regex]" >&2
	echo 'options:' >&2
	echo "   -h: host address (current: $pkg_host)" >&2
	echo "   -b: base path (current: $pkg_base)" >&2
	echo "   -a: arch regex (current: $arch_regexp)" >&2
	exit 1
}

sshinit() {
	# default ssh program
	SSH=ssh
	SCP=scp
	if [[ -n $SSH_AUTH_SOCK ]] && ssh-add -l &>/dev/null; then
		# we using ssh-agent
		true
	elif type -P sshpass &>/dev/null; then
		printf "%s 's password: " "$pkg_host"
		read -rs SSHPASS
		echo
		if [[ -z "$SSHPASS" ]]; then
			echo 'Empty pass, sshpass not needed'
			return
		fi
		export SSHPASS
		SSH='sshpass -e ssh'
		SCP='sshpass -e scp'
	else
		echo 'Nor ssh-agent, nor sshpass detected. You wil tap your pass more than once.'
	fi
}

while getopts 'h:b:a:' opt; do
	case $opt in
		a) arch_regexp=$OPTARG;;
		b) pkg_base=$OPTARG;;
		h) pkg_host=$OPTARG;;
		*) usage;;
	esac
done
shift $((OPTIND - 1));

(( $# >= 1 )) || usage

case $1 in
	list|get|install) action="$1";;
	*) usage;;
esac

pkg_regex="$2"

sshinit

list_tmp=$(mktemp)
$SSH "$pkg_host" \
"find '$pkg_base' -type f \
-regextype posix-egrep -regex '.*/$pkg_regex.*-$arch_regexp.pkg\.tar\.xz'" \
</dev/null >"$list_tmp" 2>/dev/null
if (( $? != 0 )); then
	echo 'Unable to list remote files. Check your password!'
	exit 1
fi

exec 3<>"$list_tmp"
while read -u 3 -r line; do
	[[ $line ]] || continue
	case $action in
	list)
		echo "$line"
		;;
	get)
		[[ -f $(basename $line) ]] &&
			echo "==> $(basename $line): already exists. skipped!" && continue
		$SCP "$pkg_host:$line" .
		;;
	install)
		(( EUID == 0 )) && pacman='pacman' || pacman='sudo pacman'
		pkg_tmp=$(mktemp)
		$SCP "$pkg_host:$line" "$pkg_tmp" && $pacman -U "$pkg_tmp"
		rm -f "$pkg_tmp"
		;;
	esac
done

rm -f "$list_tmp"

# vim:set ts=2 sw=2 ft=sh noet:
